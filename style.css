/* ----------------------------------
   Media Query #1: Tablet View (≥ 772px)
   Cho phép 2 cột, mỗi cột chiếm 45% viewport width,
   và hình ảnh không vượt quá 30% viewport height.
------------------------------------ */
@media (min-width: 772px) {
  /* 1. Thiết lập container thành flex để các item xếp hàng ngang,
        đồng thời cho phép wrap khi bội số > 2 (để xuống dòng). */
  .container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between; /* đẩy các phần tử ra hai bên, cách đều */
    /* Nếu cần khoảng cách giữa các item: 
       gap: 2%;  */
  }
  

  /* 2. Mỗi item chiếm 45vw (45% chiều rộng viewport).
        Bạn cũng có thể dùng width: 45%; nếu .container có width = 100% viewport.
        Nhưng thường dùng vw để trực tiếp tham chiếu viewport width. */
  .container .item {
    box-sizing: border-box; /* để padding/margin không làm vượt 45vw */
    width: 45vw;
    margin-bottom: 2vh; /* khoảng cách dọc giữa hai dòng nếu có wrap */
  }

  /* 3. Hạn chế chiều cao hình ảnh không vượt quá 30% viewport height */
  .container .item img {
    max-height: 30vh;
    width: auto;    /* giữ tỉ lệ gốc, tự điều chỉnh sao cho không biến dạng */
    display: block; /* loại bỏ khoảng trắng dưới ảnh */
    margin: 0 auto; /* căn giữa ảnh trong .item nếu muốn */
  }
}
/* ----------------------------------
   Media Query #2: Large Screen View (≥ 998px)
   Cho phép 3 cột, mỗi cột chiếm 30% viewport width.
   Các thuộc tính từ tablet view sẽ được ghi đè tại đây.
------------------------------------ */
@media (min-width: 998px) {
  .container .item {
    width: 30vw;      /* mỗi item chiếm 30% viewport width */
    margin-bottom: 2vh; /* giữ khoảng cách dọc nếu wrap xuống dòng */
  }

  /* Nếu bạn muốn hình ảnh vẫn giữ quy tắc max-height 30vh,
     thì không cần khai báo lại; ngược lại, có thể override ở đây.
     Ví dụ nếu muốn lớn hơn, bạn có thể thêm:
     .container .item img { max-height: 25vh; }
     Nhưng theo yêu cầu, không cần thay đổi gì thêm. */
}
